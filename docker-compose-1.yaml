version: '3.7'

services:
  postgres:
    image: postgres:latest
    ports:
      - "8801:5432"
    environment:
      POSTGRES_USER: fammy
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fammydb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "8802:6379"
    command: redis-server --requirepass password

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper

  kafka:
    image: confluentinc/cp-server:7.3.2
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'  # Disabling Confluent metrics for local development
    ports:
      - '9092:9092'
      - '29092:29092'
    healthcheck:
      test: ["CMD", "kafka-topics", "--describe", "--bootstrap-server", "kafka:9092"]
      interval: 15s
      timeout: 60s
      retries: 3
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-server:7.3.2
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ['/bin/sh','-c']
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic server1 --config cleanup.policy=compact --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic server2 --config cleanup.policy=compact --replication-factor 1 --partitions 3
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic server3 --config cleanup.policy=compact --replication-factor 1 --partitions 3

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  redpanda:
    image: redpandadata/console:v2.5.1
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      KAFKA_BROKERS: kafka:9092
      CONFIG_FILEPATH: /tmp/config.yml

volumes:
  postgres_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
