version: '3.8'

services:
  postgres:
    image: postgres:latest
    ports:
      - "8801:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: message
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "8802:6379"
    command: redis-server --requirepass password

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
  web1:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8001:8080"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      SECRET_CODE: f1152577d55a836ea26843b0433059ed9ba1add93e0e49767890c2c46852b8d8
      BOOTSTRAP_SERVER: kafka:9092
      TOPIC_NAME: server1
      REDIS_SERVER: redis:8802
      REDIS_PASSWORD: password
      SERVER_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 8801
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: message
  web2:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8002:8080"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      SECRET_CODE: f1152577d55a836ea26843b0433059ed9ba1add93e0e49767890c2c46852b8d8
      BOOTSTRAP_SERVER: kafka:9092
      TOPIC_NAME: server1
      REDIS_SERVER: redis:8802
      REDIS_PASSWORD: password
      SERVER_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 8801
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: message
  dummy:
    image: alpine:latest  # You can use any lightweight image
    command: tail -f /dev/null  # Keeps the container running indefinitely
    depends_on:
      - postgres
      - redis
      - kafka
volumes:
  postgres_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
    